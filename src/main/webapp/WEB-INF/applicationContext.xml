<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security-3.1.xsd">


	<beans:bean id="appUserDetailsService" class="com.br.sixminds.psyconnect.security.AppUserDetailsService" />

	<!-- resolver problema com RequisicaoAjax, 
		se a sessão perder os cokies, vai para o login. -->

	<beans:bean id="exceptionTranslationFilter"
		class="org.springframework.security.web.access.ExceptionTranslationFilter">
		<beans:property name="accessDeniedHandler" ref="jsfAccessDeniedHandler" />
		<beans:property name="authenticationEntryPoint" ref="authenticationEntryPoint" />
	</beans:bean>

	<!-- se o usuario acessar uma pagina que não tem permissão, redireciona 
		para a pagina de acesso negado. -->
	<beans:bean id="jsfAccessDeniedHandler"
		class="com.br.sixminds.psyconnect.security.JsfAccessDeniedHandler">
		<beans:property name="loginPath" value="/AcessoNegado.xhtml" />
		<beans:property name="contextRelative" value="true" />
	</beans:bean>

	<!-- se o usuario tentar acessar uma pagina e não estiver logado, redireciona 
		para a pagina de login. -->
	<beans:bean id="authenticationEntryPoint"
		class="com.br.sixminds.psyconnect.security.JsfLoginUrlAuthenticationEntryPoint">
		<beans:property name="loginFormUrl" value="/Login.xhtml" />
		<beans:property name="redirectStrategy" ref="jsfRedirectStrategy" />
	</beans:bean>

	<beans:bean id="jsfRedirectStrategy"
		class="com.br.sixminds.psyconnect.security.JsfRedirectStrategy" />


	<!-- liberando acesso para o resource -->
	<http pattern="/Login.xhtml" security="none" />
	<http pattern="/Erro.xhtml" security="none" />
	<http pattern="/javax.faces.resource/**" security="none" />

	<!-- configura automaticamente a tela de login -->
	<http auto-config="false" use-expressions="true">

		<!-- traduz a a excessão -->
		<custom-filter ref="exceptionTranslationFilter" before="FILTER_SECURITY_INTERCEPTOR" />

		<!-- define os acessos -->
		<intercept-url pattern="/Inicio.xhtml" access="isAuthenticated()" />
		<intercept-url pattern="/AcessoNegado.xhtml" access="isAuthenticated()" />
		<intercept-url pattern="/cadastros/entidades/paciente/**"
			access="hasAnyRole('PACIENTES', 'ADMINISTRADORES')" />
		<intercept-url pattern="/cadastros/entidades/medico/**"
			access="hasAnyRole('MEDICOS', 'ADMINISTRADORES')" />
		<intercept-url pattern="/**" access="denyAll" />

		<form-login login-page="/Login.xhtml"
			authentication-failure-url="/Login.xhtml?invalid=true"
			default-target-url="/" always-use-default-target="true" />
		<logout logout-url="/j_spring_security_logout"
			invalidate-session="true" />

	</http>

	<authentication-manager>
		<!-- cria um provedor de autenticação -->

		<authentication-provider user-service-ref="appUserDetailsService">
			<!-- <password-encoder hash="md5" /> -->
		</authentication-provider>

	</authentication-manager>

</beans:beans>